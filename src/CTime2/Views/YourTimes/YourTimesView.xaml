<Page
    x:Class="CTime2.Views.YourTimes.YourTimesView"
    
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CTime2.Views.YourTimes"
    xmlns:converter="using:CTime2.Converter"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"

    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    >
    <Page.Resources>
        <CollectionViewSource x:Key="GroupedTimes"
                              Source="{x:Bind ViewModel.Times, Mode=OneWay}"
                              IsSourceGrouped="True"
                              ItemsPath="Times" />
        <converter:FormatStringConverter x:Key="DateTimeToDayNumberConverter" FormatString="ddd dd. MMMM" />
        
        <converter:FormatStringConverter x:Key="DateTimeToStringConverter" FormatString="t" PlaceholderString="?" />
        <Style x:Key="DefaultListViewHeaderItemStyle" 
               TargetType="ListViewHeaderItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>
        <Style x:Key="SaturdayListViewHeaderItemStyle" 
               TargetType="ListViewHeaderItem" 
               BasedOn="{StaticResource DefaultListViewHeaderItemStyle}">
            <Setter Property="Background" Value="{ThemeResource SystemListAccentLowColor}" />
        </Style>
        <Style x:Key="SundayListViewHeaderItemStyle" 
               TargetType="ListViewHeaderItem"  
               BasedOn="{StaticResource DefaultListViewHeaderItemStyle}">
            <Setter Property="Background" Value="{ThemeResource SystemListAccentMediumColor }" />
        </Style>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        
        <ListView ItemsSource="{Binding Source={StaticResource GroupedTimes}}"
                  IsItemClickEnabled="True"
                  SelectionMode="None"
                  Grid.Row="0">
            <ListView.GroupStyle>
                <GroupStyle HidesIfEmpty="True"
                            HeaderContainerStyle="{StaticResource DefaultListViewHeaderItemStyle}">
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate x:DataType="local:TimesByDay">
                            <Grid Loaded="FrameworkElement_OnLoaded" 
                                  DataContextChanged="FrameworkElement_OnDataContextChanged">
                                <TextBlock Text="{x:Bind Day, Converter={StaticResource DateTimeToDayNumberConverter}, Mode=OneWay}" />
                                <TextBlock Text="{x:Bind Hours, Mode=OneWay}" 
                                           HorizontalAlignment="Right"
                                           />
                            </Grid>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ListView.GroupStyle>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="local:TimeForGrouping">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="60" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="{x:Bind ClockInTime, Converter={StaticResource DateTimeToStringConverter}, Mode=OneWay}"
                                   Grid.Column="0"
                                   HorizontalAlignment="Right" />
                        <TextBlock Text="-"
                                   Grid.Column="1"/>
                        <TextBlock Text="{x:Bind ClockOutTime, Converter={StaticResource DateTimeToStringConverter}, Mode=OneWay}"
                                   Grid.Column="2"
                                   HorizontalAlignment="Left" />
                        <TextBlock Text="{x:Bind Duration, Mode=OneWay}"
                                   Grid.Column="3"/>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <CommandBar Grid.Row="1">
            <AppBarButton x:Uid="ShareAppBarButton" 
                          Label="~Teilen"
                          Command="{x:Bind ViewModel.Share}" >
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE72D;"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton Icon="Filter"
                          x:Uid="StartDateAppBarButton"
                          Label="~Startdatum">
                <AppBarButton.Flyout>
                    <DatePickerFlyout Date="{x:Bind ViewModel.StartDate, Mode=TwoWay}"
                                      Placement="Top">
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="DatePicked">
                                <core:InvokeCommandAction Command="{x:Bind ViewModel.LoadTimes}" />
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                    </DatePickerFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Icon="Filter"
                          x:Uid="EndDateAppBarButton"
                          Label="~Enddatum">
                <AppBarButton.Flyout>
                    <DatePickerFlyout Date="{x:Bind ViewModel.EndDate, Mode=TwoWay}"
                                      Placement="Top">
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="DatePicked">
                                <core:InvokeCommandAction Command="{x:Bind ViewModel.LoadTimes}" />
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                    </DatePickerFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>
        </CommandBar>
    </Grid>
</Page>
