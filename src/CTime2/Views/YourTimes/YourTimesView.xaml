<Page
    x:Class="CTime2.Views.YourTimes.YourTimesView"
    
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CTime2.Views.YourTimes"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:uwCoreConverter="using:UwCore.Converter"
    xmlns:data="using:CTime2.Core.Data"
    xmlns:behaviors="using:CTime2.Behaviors"
    xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    >
    <Page.Resources>
        <CollectionViewSource x:Key="GroupedTimes"
                              Source="{x:Bind ViewModel.Times, Mode=OneWay}"
                              IsSourceGrouped="True"
                              ItemsPath="Times" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <uwCoreConverter:FormatStringConverter x:Key="DateTimeToDayNumberConverter" FormatString="ddd dd. MMMM" />
        <uwCoreConverter:FormatStringConverter x:Key="DateTimeToStringConverter" FormatString="t" PlaceholderString="?" />
        <Style x:Key="DefaultListViewHeaderItemStyle" 
               TargetType="ListViewHeaderItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>
        <Style x:Key="SaturdayListViewHeaderItemStyle" 
               TargetType="ListViewHeaderItem" 
               BasedOn="{StaticResource DefaultListViewHeaderItemStyle}">
            <Setter Property="Background" Value="{ThemeResource SystemListAccentLowColor}" />
        </Style>
        <Style x:Key="SundayListViewHeaderItemStyle" 
               TargetType="ListViewHeaderItem"  
               BasedOn="{StaticResource DefaultListViewHeaderItemStyle}">
            <Setter Property="Background" Value="{ThemeResource SystemListAccentMediumColor }" />
        </Style>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        
        <ListView ItemsSource="{Binding Source={StaticResource GroupedTimes}}"
                  IsItemClickEnabled="True"
                  SelectionMode="None"
                  Grid.Row="0">
            <ListView.GroupStyle>
                <GroupStyle HidesIfEmpty="True"
                            HeaderContainerStyle="{StaticResource DefaultListViewHeaderItemStyle}">
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate x:DataType="data:TimesByDay">
                            <Grid Loaded="FrameworkElement_OnLoaded" 
                                  DataContextChanged="FrameworkElement_OnDataContextChanged">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <SymbolIcon Grid.Column="0"
                                            x:Uid="MissingTimeSymbolIcon"
                                            Margin="0, 0, 10, 0"
                                            HorizontalAlignment="Center"
                                            ToolTipService.ToolTip="~An diesem Arbeitstag sind keine Zeiten erfasst. Sie können über den Button 'Fehlende Zeiten melden' automatisch eine E-Mail mit allen fehlenden Tagen generieren lassen."
                                            Visibility="{x:Bind IsMissing, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                                            Symbol="ReportHacked"
                                            Foreground="Red"
                                            PointerPressed="WarnMissingDaysSymbolIcon_OnPointerPressed"
                                            />
                                
                                <TextBlock Grid.Column="1" 
                                           Text="{x:Bind Day, Converter={StaticResource DateTimeToDayNumberConverter}, Mode=OneWay}" />
                                
                                <TextBlock Grid.Column="2" 
                                           Text="{x:Bind Hours, Mode=OneWay}" HorizontalAlignment="Right" />
                            </Grid>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ListView.GroupStyle>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="data:TimeForGrouping">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="60" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="60" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="{x:Bind ClockInTime, Converter={StaticResource DateTimeToStringConverter}, Mode=OneWay}"
                                   Grid.Column="0"
                                   HorizontalAlignment="Right" />
                        <TextBlock Text="-"
                                   Grid.Column="1"/>
                        <TextBlock Text="{x:Bind ClockOutTime, Converter={StaticResource DateTimeToStringConverter}, Mode=OneWay}"
                                   Grid.Column="2"
                                   HorizontalAlignment="Left" />
                        <TextBlock Text="{x:Bind StateDescription, Mode=OneWay}"
                                   Grid.Column="3"
                                   HorizontalAlignment="Left" />
                        <TextBlock Text="{x:Bind Duration, Mode=OneWay}"
                                   Grid.Column="4"/>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <CommandBar Grid.Row="1">
            <AppBarButton x:Uid="ReportMissingDaysAppBarButton"
                          Label="~Fehlende Tage melden"
                          Command="{x:Bind ViewModel.ReportMissingTimes}"
                          Visibility="{x:Bind ViewModel.ReportMissingTimes.CanExecute, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
                <AppBarButton.Icon>
                    <SymbolIcon Symbol="ReportHacked" />
                </AppBarButton.Icon>
                
            </AppBarButton>
            <AppBarButton x:Uid="ShareAppBarButton" 
                          Label="~Teilen"
                          Command="{x:Bind ViewModel.Share}" >
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE72D;"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton Icon="Filter"
                          x:Uid="StartDateAppBarButton"
                          Label="~Startdatum">
                <AppBarButton.Flyout>
                    <Flyout FlyoutPresenterStyle="{StaticResource FlyoutPresenterWithoutPadding}">
                        <CalendarView x:Name="StartDateCalendarView">
                            <interactivity:Interaction.Behaviors>
                                <!-- x:Bind will lead to some errors because the SelectedDateChanged will be fired, before the SelectedDate is updated in the view-model -->
                                <behaviors:CalendarViewBindingHelper SelectedDate="{Binding StartDate, Mode=TwoWay}">
                                    <interactivity:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="SelectedDateChanged">
                                            <behaviors:CloseFlyoutAction Control="{Binding ElementName=StartDateCalendarView}" />
                                            <core:InvokeCommandAction Command="{x:Bind ViewModel.LoadTimes}" />
                                        </core:EventTriggerBehavior>
                                    </interactivity:Interaction.Behaviors>
                                </behaviors:CalendarViewBindingHelper>
                            </interactivity:Interaction.Behaviors>
                        </CalendarView>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Icon="Filter"
                          x:Uid="EndDateAppBarButton"
                          Label="~Enddatum">
                <AppBarButton.Flyout>
                    <Flyout FlyoutPresenterStyle="{StaticResource FlyoutPresenterWithoutPadding}">
                        <CalendarView x:Name="EndDateCalendarView">
                            <interactivity:Interaction.Behaviors>
                                <!-- x:Bind will lead to some errors because the SelectedDateChanged will be fired, before the SelectedDate is updated in the view-model -->
                                <behaviors:CalendarViewBindingHelper SelectedDate="{Binding EndDate, Mode=TwoWay}">
                                    <interactivity:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="SelectedDateChanged">
                                            <behaviors:CloseFlyoutAction Control="{Binding ElementName=EndDateCalendarView}" />
                                            <core:InvokeCommandAction Command="{x:Bind ViewModel.LoadTimes}" />
                                        </core:EventTriggerBehavior>
                                    </interactivity:Interaction.Behaviors>
                                </behaviors:CalendarViewBindingHelper>
                            </interactivity:Interaction.Behaviors>
                        </CalendarView>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
        </CommandBar>
    </Grid>
</Page>
